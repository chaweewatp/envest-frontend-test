{"ast":null,"code":"var _jsxFileName = \"/Users/pornchaichaweewat/myworkspace/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport APP from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(APP, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), \",\"), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); // import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n//\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [],text:'' };\n//     this.handleTableChange = this.handleTableChange.bind(this);\n//     this.handleChickenChange = this.handleChickenChange.bind(this);\n//     this.handlePepsiChange = this.handlePepsiChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3> First & Friend Fried Chicken</h3>\n//         <TodoList items={this.state.items} />\n//         What would you like to order?\n//\n//         <form onSubmit={this.handleSubmit}>\n//\n//           <label> Table: </label>\n//           <input onChange={this.handleTableChange}  /> <br/>\n//\n//           <label > Chicken: </label>\n//           <input onChange={this.handleChickenChange} /><br/>\n//\n//           <label > Pepsi: </label>\n//           <input onChange={this.handlePepsiChange} /><br/>\n//\n//           <button> Add new order </button>\n//         </form>\n//       </div>\n//     );\n//   }\n//   handleTableChange(e) {\n//     this.setState({ table: e.target.value });\n//   }\n//\n//   handleChickenChange(e) {\n//     this.setState({ chicken: e.target.value });\n//   }\n//\n//   handlePepsiChange(e) {\n//     this.setState({ pepsi: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.table.length === 0) {\n//       return;\n//     }\n//     const newItem = {\n//       text: 'Table: '+  this.state.table+ '  Chicken :'+ this.state.chicken +\n//       '  Pepsi :'+ this.state.pepsi + ',  Total : '+(this.state.chicken*15 + this.state.pepsi*7),\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text: ''\n//     }));\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );","map":{"version":3,"sources":["/Users/pornchaichaweewat/myworkspace/my-app/src/index.js"],"names":["React","ReactDOM","APP","serviceWorker","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAIAF,QAAQ,CAACG,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,MADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAH,aAAa,CAACI,UAAd,G,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport APP from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <APP />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n//\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [],text:'' };\n//     this.handleTableChange = this.handleTableChange.bind(this);\n//     this.handleChickenChange = this.handleChickenChange.bind(this);\n//     this.handlePepsiChange = this.handlePepsiChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3> First & Friend Fried Chicken</h3>\n//         <TodoList items={this.state.items} />\n//         What would you like to order?\n//\n//         <form onSubmit={this.handleSubmit}>\n//\n//           <label> Table: </label>\n//           <input onChange={this.handleTableChange}  /> <br/>\n//\n//           <label > Chicken: </label>\n//           <input onChange={this.handleChickenChange} /><br/>\n//\n//           <label > Pepsi: </label>\n//           <input onChange={this.handlePepsiChange} /><br/>\n//\n//           <button> Add new order </button>\n//         </form>\n//       </div>\n//     );\n//   }\n//   handleTableChange(e) {\n//     this.setState({ table: e.target.value });\n//   }\n//\n//   handleChickenChange(e) {\n//     this.setState({ chicken: e.target.value });\n//   }\n//\n//   handlePepsiChange(e) {\n//     this.setState({ pepsi: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.table.length === 0) {\n//       return;\n//     }\n//     const newItem = {\n//       text: 'Table: '+  this.state.table+ '  Chicken :'+ this.state.chicken +\n//       '  Pepsi :'+ this.state.pepsi + ',  Total : '+(this.state.chicken*15 + this.state.pepsi*7),\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text: ''\n//     }));\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );\n"]},"metadata":{},"sourceType":"module"}