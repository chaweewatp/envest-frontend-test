{"version":3,"sources":["index.js"],"names":["TodoApp","props","state","items","text","handleTableChange","bind","handleChickenChange","handlePepsiChange","handleSubmit","TodoList","this","onSubmit","onChange","e","setState","table","target","value","chicken","pepsi","preventDefault","length","newItem","id","Date","now","concat","React","Component","map","item","ReactDOM","render","document","getElementById"],"mappings":"sNAmGMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,MAAO,GAAGC,KAAK,IAC9B,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBANH,E,qDAUjB,OACE,6BACE,6DACA,kBAACI,EAAD,CAAUP,MAAOQ,KAAKT,MAAMC,QAF9B,gCAKE,0BAAMS,SAAUD,KAAKF,cAEnB,2CACA,2BAAOI,SAAUF,KAAKN,oBAHxB,IAG+C,6BAE7C,6CACA,2BAAOQ,SAAUF,KAAKJ,sBAAuB,6BAE7C,2CACA,2BAAOM,SAAUF,KAAKH,oBAAqB,6BAE3C,uD,wCAKUM,GAChBH,KAAKI,SAAS,CAAEC,MAAOF,EAAEG,OAAOC,U,0CAGdJ,GAClBH,KAAKI,SAAS,CAAEI,QAASL,EAAEG,OAAOC,U,wCAGlBJ,GAChBH,KAAKI,SAAS,CAAEK,MAAON,EAAEG,OAAOC,U,mCAGrBJ,GAEX,GADAA,EAAEO,iBAC8B,IAA5BV,KAAKT,MAAMc,MAAMM,OAArB,CAGA,IAAMC,EAAU,CACdnB,KAAM,UAAYO,KAAKT,MAAMc,MAAO,cAAeL,KAAKT,MAAMiB,QAC9D,YAAaR,KAAKT,MAAMkB,MAAQ,eAAkC,GAAnBT,KAAKT,MAAMiB,QAA8B,EAAjBR,KAAKT,MAAMkB,OAClFI,GAAIC,KAAKC,OAEXf,KAAKI,UAAS,SAAAb,GAAK,MAAK,CACtBC,MAAOD,EAAMC,MAAMwB,OAAOJ,GAC1BnB,KAAM,Y,GAzDUwB,IAAMC,WA8DtBnB,E,uKAEF,OACE,4BACGC,KAAKV,MAAME,MAAM2B,KAAI,SAAAC,GAAI,OACxB,4BAAKA,EAAK3B,c,GALGwB,IAAMC,WAY7BG,IAASC,OACP,kBAACjC,EAAD,MACAkC,SAASC,eAAe,W","file":"static/js/main.a6f03f5f.chunk.js","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <APP />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [], text: '' };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3>TODO</h3>\n//\n//         <TodoList items={this.state.items} />\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor=\"new-todo\">\n//             What needs to be done?\n//           </label>\n//           <input\n//             id=\"new-todo\"\n//             onChange={this.handleChange}\n//             value={this.state.text}\n//           />\n//           <button>\n//             Add #{this.state.items.length + 1}\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n//\n//   handleChange(e) {\n//     this.setState({ text: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.text.length === 0) {\n//       return;\n//     }\n//     const newItem = {\n//       text: this.state.text,\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text: ''\n//     }));\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li key={item.id}>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );\n\n\n\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [],text:'' };\n    this.handleTableChange = this.handleTableChange.bind(this);\n    this.handleChickenChange = this.handleChickenChange.bind(this);\n    this.handlePepsiChange = this.handlePepsiChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3> First & Friend Fried Chicken</h3>\n        <TodoList items={this.state.items} />\n        What would you like to order?\n\n        <form onSubmit={this.handleSubmit}>\n\n          <label> Table: </label>\n          <input onChange={this.handleTableChange}  /> <br/>\n\n          <label > Chicken: </label>\n          <input onChange={this.handleChickenChange} /><br/>\n\n          <label > Pepsi: </label>\n          <input onChange={this.handlePepsiChange} /><br/>\n\n          <button> Add new order </button>\n        </form>\n      </div>\n    );\n  }\n  handleTableChange(e) {\n    this.setState({ table: e.target.value });\n  }\n\n  handleChickenChange(e) {\n    this.setState({ chicken: e.target.value });\n  }\n\n  handlePepsiChange(e) {\n    this.setState({ pepsi: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.table.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: 'Table: '+  this.state.table+ '  Chicken :'+ this.state.chicken +\n      '  Pepsi :'+ this.state.pepsi + ',  Total : '+(this.state.chicken*15 + this.state.pepsi*7),\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}