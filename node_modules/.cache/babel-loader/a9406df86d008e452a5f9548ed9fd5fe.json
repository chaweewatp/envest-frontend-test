{"ast":null,"code":"var _jsxFileName = \"/Users/pornchaichaweewat/myworkspace/my-app/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <APP />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0\n    };\n  }\n\n  tick() {\n    this.setState(state => ({\n      seconds: state.seconds + 1\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 200);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"Seconds: \", this.state.seconds);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Timer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n//\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [],text:'' };\n//     this.handleTableChange = this.handleTableChange.bind(this);\n//     this.handleChickenChange = this.handleChickenChange.bind(this);\n//     this.handlePepsiChange = this.handlePepsiChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3> First & Friend Fried Chicken</h3>\n//         <TodoList items={this.state.items} />\n//         What would you like to order?\n//\n//         <form onSubmit={this.handleSubmit}>\n//\n//           <label> Table: </label>\n//           <input onChange={this.handleTableChange}  /> <br/>\n//\n//           <label > Chicken: </label>\n//           <input onChange={this.handleChickenChange} /><br/>\n//\n//           <label > Pepsi: </label>\n//           <input onChange={this.handlePepsiChange} /><br/>\n//\n//           <button> Add new order </button>\n//         </form>\n//       </div>\n//     );\n//   }\n//   handleTableChange(e) {\n//     this.setState({ table: e.target.value });\n//   }\n//\n//   handleChickenChange(e) {\n//     this.setState({ chicken: e.target.value });\n//   }\n//\n//   handlePepsiChange(e) {\n//     this.setState({ pepsi: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.table.length === 0) {\n//       return;\n//     }\n//     const newItem = {\n//       text: 'Table: '+  this.state.table+ '  Chicken :'+ this.state.chicken +\n//       '  Pepsi :'+ this.state.pepsi + ',  Total : '+(this.state.chicken*15 + this.state.pepsi*7),\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text: ''\n//     }));\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );","map":{"version":3,"sources":["/Users/pornchaichaweewat/myworkspace/my-app/src/index.js"],"names":["React","ReactDOM","Timer","Component","constructor","props","state","seconds","tick","setState","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,SAAKC,QAAL,CAAcH,KAAK,KAAK;AACtBC,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AADH,KAAL,CAAnB;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKJ,IAAL,EAAP,EAAoB,GAApB,CAA3B;AACD;;AAEDK,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,KAAKT,KAAL,CAAWC,OADvB,CADF;AAKD;;AA1BiC;;AA6BpCN,QAAQ,CAACc,MAAT,eACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <APP />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 0 };\n  }\n\n  tick() {\n    this.setState(state => ({\n      seconds: state.seconds + 1\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 200);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div>\n        Seconds: {this.state.seconds}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Timer />,\n  document.getElementById('root')\n);\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n//\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [],text:'' };\n//     this.handleTableChange = this.handleTableChange.bind(this);\n//     this.handleChickenChange = this.handleChickenChange.bind(this);\n//     this.handlePepsiChange = this.handlePepsiChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3> First & Friend Fried Chicken</h3>\n//         <TodoList items={this.state.items} />\n//         What would you like to order?\n//\n//         <form onSubmit={this.handleSubmit}>\n//\n//           <label> Table: </label>\n//           <input onChange={this.handleTableChange}  /> <br/>\n//\n//           <label > Chicken: </label>\n//           <input onChange={this.handleChickenChange} /><br/>\n//\n//           <label > Pepsi: </label>\n//           <input onChange={this.handlePepsiChange} /><br/>\n//\n//           <button> Add new order </button>\n//         </form>\n//       </div>\n//     );\n//   }\n//   handleTableChange(e) {\n//     this.setState({ table: e.target.value });\n//   }\n//\n//   handleChickenChange(e) {\n//     this.setState({ chicken: e.target.value });\n//   }\n//\n//   handlePepsiChange(e) {\n//     this.setState({ pepsi: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.table.length === 0) {\n//       return;\n//     }\n//     const newItem = {\n//       text: 'Table: '+  this.state.table+ '  Chicken :'+ this.state.chicken +\n//       '  Pepsi :'+ this.state.pepsi + ',  Total : '+(this.state.chicken*15 + this.state.pepsi*7),\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text: ''\n//     }));\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );\n"]},"metadata":{},"sourceType":"module"}