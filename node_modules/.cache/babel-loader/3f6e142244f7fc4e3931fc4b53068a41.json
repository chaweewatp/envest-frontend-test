{"ast":null,"code":"var _jsxFileName = \"/Users/pornchaichaweewat/myworkspace/my-app/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"TODO\"), /*#__PURE__*/React.createElement(TodoList, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"What needs to be done?\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"new-todo\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"Add #\", this.state.items.length + 1)));\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, this.props.items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, item.text)));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(TodoApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }\n}), document.getElementById('todos-example')); // ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); // import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n//\n// const styles = {\n//   app: {\n//     paddingTop: 40,\n//     textAlign: 'center',\n//   },\n// }\n//\n// class App extends Component {\n//   render() {\n//     return (\n//       <div style={styles.app}>\n//         Welcome to React!\n//       </div>\n//     )\n//   }\n// }\n//\n// const root = document.querySelector('#app')\n// ReactDOM.render(<App />, root)\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class HelloMessage extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         Hello {this.props.name}\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//     <React.StrictMode>\n//     <HelloMessage name=\"Taylor\" />\n//     </React.StrictMode>,\n//\n//   document.getElementById('hello-example')\n// );\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class ProductCategoryRow extends React.Component {\n//   render() {\n//     const category = this.props.category;\n//     return (\n//       <tr>\n//         <th colSpan=\"2\">\n//           {category}\n//         </th>\n//       </tr>\n//     );\n//   }\n// }\n//\n// class ProductRow extends React.Component {\n//   render() {\n//     const product = this.props.product;\n//     const name = product.stocked ?\n//       product.name :\n//       <span style={{color: 'red'}}>\n//         {product.name}\n//       </span>;\n//\n//     return (\n//       <tr>\n//         <td>{name}</td>\n//         <td>{product.price}</td>\n//       </tr>\n//     );\n//   }\n// }\n//\n// class ProductTable extends React.Component {\n//   render() {\n//     const rows = [];\n//     let lastCategory = null;\n//\n//     this.props.products.forEach((product) => {\n//       if (product.category !== lastCategory) {\n//         rows.push(\n//           <ProductCategoryRow\n//             category={product.category}\n//             key={product.category} />\n//         );\n//       }\n//       rows.push(\n//         <ProductRow\n//           product={product}\n//           key={product.name} />\n//       );\n//       lastCategory = product.category;\n//     });\n//\n//     return (\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//           </tr>\n//         </thead>\n//         <tbody>{rows}</tbody>\n//       </table>\n//     );\n//   }\n// }\n//\n// class SearchBar extends React.Component {\n//   render() {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"Search...\" />\n//         <p>\n//           <input type=\"checkbox\" />\n//           {' '}\n//           Only show products in stock\n//         </p>\n//       </form>\n//     );\n//   }\n// }\n//\n// class FilterableProductTable extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <SearchBar />\n//         <ProductTable products={this.props.products} />\n//       </div>\n//     );\n//   }\n// }\n//\n//\n// const PRODUCTS = [\n//   {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\n//   {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n//   {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n//   {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n//   {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n//   {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n// ];\n//\n// ReactDOM.render(\n//   <FilterableProductTable products={PRODUCTS} />,\n//   document.getElementById('container')\n// );","map":{"version":3,"sources":["/Users/pornchaichaweewat/myworkspace/my-app/src/index.js"],"names":["React","Component","ReactDOM","App","serviceWorker","TodoApp","constructor","props","state","items","text","handleChange","bind","handleSubmit","render","length","e","setState","target","value","preventDefault","newItem","id","Date","now","concat","TodoList","map","item","document","getElementById","unregister"],"mappings":"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":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <TodoList items={this.state.items} />\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Add #{this.state.items.length + 1}\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li key={item.id}>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('todos-example')\n);\n\n\n\n\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n//\n// const styles = {\n//   app: {\n//     paddingTop: 40,\n//     textAlign: 'center',\n//   },\n// }\n//\n// class App extends Component {\n//   render() {\n//     return (\n//       <div style={styles.app}>\n//         Welcome to React!\n//       </div>\n//     )\n//   }\n// }\n//\n// const root = document.querySelector('#app')\n// ReactDOM.render(<App />, root)\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class HelloMessage extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         Hello {this.props.name}\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//     <React.StrictMode>\n//     <HelloMessage name=\"Taylor\" />\n//     </React.StrictMode>,\n//\n//   document.getElementById('hello-example')\n// );\n\n\n\n\n\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class ProductCategoryRow extends React.Component {\n//   render() {\n//     const category = this.props.category;\n//     return (\n//       <tr>\n//         <th colSpan=\"2\">\n//           {category}\n//         </th>\n//       </tr>\n//     );\n//   }\n// }\n//\n// class ProductRow extends React.Component {\n//   render() {\n//     const product = this.props.product;\n//     const name = product.stocked ?\n//       product.name :\n//       <span style={{color: 'red'}}>\n//         {product.name}\n//       </span>;\n//\n//     return (\n//       <tr>\n//         <td>{name}</td>\n//         <td>{product.price}</td>\n//       </tr>\n//     );\n//   }\n// }\n//\n// class ProductTable extends React.Component {\n//   render() {\n//     const rows = [];\n//     let lastCategory = null;\n//\n//     this.props.products.forEach((product) => {\n//       if (product.category !== lastCategory) {\n//         rows.push(\n//           <ProductCategoryRow\n//             category={product.category}\n//             key={product.category} />\n//         );\n//       }\n//       rows.push(\n//         <ProductRow\n//           product={product}\n//           key={product.name} />\n//       );\n//       lastCategory = product.category;\n//     });\n//\n//     return (\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//           </tr>\n//         </thead>\n//         <tbody>{rows}</tbody>\n//       </table>\n//     );\n//   }\n// }\n//\n// class SearchBar extends React.Component {\n//   render() {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"Search...\" />\n//         <p>\n//           <input type=\"checkbox\" />\n//           {' '}\n//           Only show products in stock\n//         </p>\n//       </form>\n//     );\n//   }\n// }\n//\n// class FilterableProductTable extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <SearchBar />\n//         <ProductTable products={this.props.products} />\n//       </div>\n//     );\n//   }\n// }\n//\n//\n// const PRODUCTS = [\n//   {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\n//   {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n//   {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n//   {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n//   {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n//   {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n// ];\n//\n// ReactDOM.render(\n//   <FilterableProductTable products={PRODUCTS} />,\n//   document.getElementById('container')\n// );\n"]},"metadata":{},"sourceType":"module"}