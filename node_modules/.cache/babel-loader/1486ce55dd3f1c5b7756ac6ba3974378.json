{"ast":null,"code":"var _jsxFileName = \"/Users/pornchaichaweewat/myworkspace/my-app/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <APP />,\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0\n    };\n  }\n\n  tick() {\n    this.setState(state => ({\n      seconds: state.seconds + 1\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 100);\n  } // componentWillUnmount() {\n  //   clearInterval(this.interval);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, \"Hello \", this.props.name, this.state.seconds);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Timer, {\n  name: \"Pornchai\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }\n}), document.getElementById('timer-example'));","map":{"version":3,"sources":["/Users/pornchaichaweewat/myworkspace/my-app/src/index.js"],"names":["React","ReactDOM","Timer","Component","constructor","props","state","seconds","tick","setState","componentDidMount","interval","setInterval","render","name","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,SAAKC,QAAL,CAAcH,KAAK,KAAK;AACtBC,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AADH,KAAL,CAAnB;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKJ,IAAL,EAAP,EAAoB,GAApB,CAA3B;AACD,GAdiC,CAgBlC;AACA;AACA;;;AAEAK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACS,KAAKR,KAAL,CAAWS,IADpB,EAEI,KAAKR,KAAL,CAAWC,OAFf,CADF;AAMD;;AA3BiC;;AA8BpCN,QAAQ,CAACY,MAAT,eACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAFF","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <APP />,\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 0 };\n  }\n\n  tick() {\n    this.setState(state => ({\n      seconds: state.seconds + 1\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 100);\n  }\n\n  // componentWillUnmount() {\n  //   clearInterval(this.interval);\n  // }\n\n  render() {\n    return (\n      <div>\n        Hello {this.props.name}\n         {this.state.seconds}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Timer name=\"Pornchai\"/>,\n  document.getElementById('timer-example')\n);\n"]},"metadata":{},"sourceType":"module"}