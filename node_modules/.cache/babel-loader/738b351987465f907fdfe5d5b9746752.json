{"ast":null,"code":"var _jsxFileName = \"/Users/pornchaichaweewat/myworkspace/my-app/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <APP />,\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text1: '',\n      text2: ''\n    };\n    this.handleChickenChange = this.handleChickenChange.bind(this);\n    this.handlePepsiChange = this.handlePepsiChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"TODO\"), /*#__PURE__*/React.createElement(TodoList, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"What needs to be done?\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"new-todo\",\n      onChange: this.handleChickenChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Add #\", this.state.items.length + 1)));\n  }\n\n  handleChickenChange(e) {\n    this.setState({\n      text1: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text1.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text1 + this.state.text1,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, this.props.items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, item.text)));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(TodoApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }\n}), document.getElementById('todos-example'));","map":{"version":3,"sources":["/Users/pornchaichaweewat/myworkspace/my-app/src/index.js"],"names":["React","ReactDOM","TodoApp","Component","constructor","props","state","items","text1","text2","handleChickenChange","bind","handlePepsiChange","handleSubmit","render","text","length","e","setState","target","value","preventDefault","newItem","id","Date","now","concat","TodoList","map","item","document","getElementById"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <APP />,\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text1: '', text2: '' };\n    this.handleChickenChange = this.handleChickenChange.bind(this);\n    this.handlePepsiChange = this.handlePepsiChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <TodoList items={this.state.items} />\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChickenChange}\n            value={this.state.text}\n          />\n          <button>\n            Add #{this.state.items.length + 1}\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  handleChickenChange(e) {\n    this.setState({ text1: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text1.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text1 + this.state.text1,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li key={item.id}>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('todos-example')\n);\n"]},"metadata":{},"sourceType":"module"}