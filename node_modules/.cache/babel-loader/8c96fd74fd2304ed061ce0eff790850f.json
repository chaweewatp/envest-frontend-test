{"ast":null,"code":"import _classCallCheck from\"/Users/pornchaichaweewat/Documents/GitHub/envest-frontend-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pornchaichaweewat/Documents/GitHub/envest-frontend-test/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/pornchaichaweewat/Documents/GitHub/envest-frontend-test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/pornchaichaweewat/Documents/GitHub/envest-frontend-test/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/pornchaichaweewat/Documents/GitHub/envest-frontend-test/node_modules/@babel/runtime/helpers/esm/inherits\";// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <APP />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [], text: '' };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3>TODO</h3>\n//\n//         <TodoList items={this.state.items} />\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor=\"new-todo\">\n//             What needs to be done?\n//           </label>\n//           <input\n//             id=\"new-todo\"\n//             onChange={this.handleChange}\n//             value={this.state.text}\n//           />\n//           <button>\n//             Add #{this.state.items.length + 1}\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n//\n//   handleChange(e) {\n//     this.setState({ text: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.text.length === 0) {\n//       return;\n//     }\n//     const newItem = {\n//       text: this.state.text,\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text: ''\n//     }));\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li key={item.id}>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );\nimport React from'react';import ReactDOM from'react-dom';var TodoApp=/*#__PURE__*/function(_React$Component){_inherits(TodoApp,_React$Component);var _super=_createSuper(TodoApp);function TodoApp(props){var _this;_classCallCheck(this,TodoApp);_this=_super.call(this,props);_this.state={items:[],text:''};_this.handleTableChange=_this.handleTableChange.bind(_assertThisInitialized(_this));_this.handleChickenChange=_this.handleChickenChange.bind(_assertThisInitialized(_this));_this.handlePepsiChange=_this.handlePepsiChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(TodoApp,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\" First & Friend Fried Chicken\"),/*#__PURE__*/React.createElement(TodoList,{items:this.state.items}),\"What would you like to order?\",/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"label\",null,\" Table: \"),/*#__PURE__*/React.createElement(\"input\",{onChange:this.handleTableChange}),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,\" Chicken: \"),/*#__PURE__*/React.createElement(\"input\",{onChange:this.handleChickenChange}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,\" Pepsi: \"),/*#__PURE__*/React.createElement(\"input\",{onChange:this.handlePepsiChange}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",null,\" Add new order \")));}},{key:\"handleTableChange\",value:function handleTableChange(e){this.setState({table:e.target.value});}},{key:\"handleChickenChange\",value:function handleChickenChange(e){this.setState({chicken:e.target.value});}},{key:\"handlePepsiChange\",value:function handlePepsiChange(e){this.setState({pepsi:e.target.value});}},{key:\"handleSubmit\",value:function handleSubmit(e){e.preventDefault();if(this.state.table.length===0){return;}var newItem={text:'Table: '+this.state.table+'  Chicken :'+this.state.chicken+'  Pepsi :'+this.state.pepsi+',  Total : '+(this.state.chicken*15+this.state.pepsi*7),id:Date.now()};this.setState(function(state){return{items:state.items.concat(newItem),text:''};});}}]);return TodoApp;}(React.Component);var TodoList=/*#__PURE__*/function(_React$Component2){_inherits(TodoList,_React$Component2);var _super2=_createSuper(TodoList);function TodoList(){_classCallCheck(this,TodoList);return _super2.apply(this,arguments);}_createClass(TodoList,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"ul\",null,this.props.items.map(function(item){return/*#__PURE__*/React.createElement(\"li\",null,item.text);}));}}]);return TodoList;}(React.Component);ReactDOM.render(/*#__PURE__*/React.createElement(TodoApp,null),document.getElementById('root'));","map":{"version":3,"sources":["/Users/pornchaichaweewat/Documents/GitHub/envest-frontend-test/src/index.js"],"names":["React","ReactDOM","TodoApp","props","state","items","text","handleTableChange","bind","handleChickenChange","handlePepsiChange","handleSubmit","e","setState","table","target","value","chicken","pepsi","preventDefault","length","newItem","id","Date","now","concat","Component","TodoList","map","item","render","document","getElementById"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import APP from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n//\n//\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <APP />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [], text: '' };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3>TODO</h3>\n//\n//         <TodoList items={this.state.items} />\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor=\"new-todo\">\n//             What needs to be done?\n//           </label>\n//           <input\n//             id=\"new-todo\"\n//             onChange={this.handleChange}\n//             value={this.state.text}\n//           />\n//           <button>\n//             Add #{this.state.items.length + 1}\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n//\n//   handleChange(e) {\n//     this.setState({ text: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.text.length === 0) {\n//       return;\n//     }\n//     const newItem = {\n//       text: this.state.text,\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text: ''\n//     }));\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li key={item.id}>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );\n\n\n\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [],text:'' };\n    this.handleTableChange = this.handleTableChange.bind(this);\n    this.handleChickenChange = this.handleChickenChange.bind(this);\n    this.handlePepsiChange = this.handlePepsiChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3> First & Friend Fried Chicken</h3>\n        <TodoList items={this.state.items} />\n        What would you like to order?\n\n        <form onSubmit={this.handleSubmit}>\n\n          <label> Table: </label>\n          <input onChange={this.handleTableChange}  /> <br/>\n\n          <label > Chicken: </label>\n          <input onChange={this.handleChickenChange} /><br/>\n\n          <label > Pepsi: </label>\n          <input onChange={this.handlePepsiChange} /><br/>\n\n          <button> Add new order </button>\n        </form>\n      </div>\n    );\n  }\n  handleTableChange(e) {\n    this.setState({ table: e.target.value });\n  }\n\n  handleChickenChange(e) {\n    this.setState({ chicken: e.target.value });\n  }\n\n  handlePepsiChange(e) {\n    this.setState({ pepsi: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.table.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: 'Table: '+  this.state.table+ '  Chicken :'+ this.state.chicken +\n      '  Pepsi :'+ this.state.pepsi + ',  Total : '+(this.state.chicken*15 + this.state.pepsi*7),\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}